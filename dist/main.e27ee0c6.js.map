{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","c","localStorage","getItem","cObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","on","window","prompt","indexOf","push","toUpperCase","render","find","prevAll","remove","forEach","node","index","$li","insertBefore","open","e","stopPropagation","splice","addEventListener","string","stringify","setItem"],"mappings":"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","file":"main.e27ee0c6.js","sourceRoot":"..\\src","sourcesContent":["const $siteList = $('.siteList')\r\nlet $lastLi = $('.siteList li:last')\r\n// 将缓存放入x\r\nconst c = localStorage.getItem('c')\r\n// 将字符串转换成对象\r\nconst cObject = JSON.parse(c)\r\n// 若缓存为空则将之前创建好的放入hashmap\r\nconst hashMap = cObject || [\r\n    { logo: 'Z', url: 'https://www.zhihu.com/' },\r\n    { logo: 'B', url: 'https://www.bilibili.com' }\r\n]\r\n// 简化url，将显示的http，https，www去掉\r\nlet simplifyUrl = (url) => {\r\n    return url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '')\r\n    // 正则表达式，不会可以搜索”正则表达式三十分钟入门“\r\n}\r\n\r\n$('.addButton').on('click', () => {\r\n    let url = window.prompt('请输入想要添加的网址')\r\n\r\n    if (url.indexOf('http') !== 0) {\r\n        url = \"https://\" + url\r\n    }\r\n    // console.log(url)\r\n    hashMap.push({\r\n        logo: simplifyUrl(url)[0].toUpperCase(),\r\n        url: url\r\n    })\r\n    render()\r\n})\r\n\r\nlet render = () => {\r\n    // $siteList.find('li:not(.last)').remove()\r\n    // 找到最后一个元素之前li全部移除\r\n    $siteList.find('li:last').prevAll().remove()\r\n    // 将之前缓存的先移除再渲染,上面两条语句都行\r\n    hashMap.forEach((node, index) => {\r\n        let $li = $(`<li>\r\n     <div class=\"site\">\r\n        <div class=\"logo\">\r\n             ${node.logo}\r\n        </div>\r\n        <div class=\"link\">\r\n             ${simplifyUrl(node.url)}\r\n        </div>\r\n        <div class=\"close\">   \r\n            <svg class=\"icon\" aria-hidden=\"true\">\r\n                <use xlink:href=\"#icon-close\"></use>\r\n            </svg>\r\n         </div> \r\n     </div>\r\n</li>`).insertBefore($lastLi)\r\n        // 创建一个新节点并将其放入lastLi之前\r\n        $li.on('click', () => {\r\n            window.open(node.url)\r\n        })\r\n        // 点击打开网页\r\n        $li.on('click', '.close', (e) => {\r\n            e.stopPropagation() // 阻止冒泡\r\n            hashMap.splice(index, 1)\r\n            render()\r\n            // 重新渲染\r\n        })\r\n        // 点击删除缓存好的站点 \r\n    })\r\n}\r\nrender()\r\n// 渲染初始页面\r\nwindow.addEventListener('beforeunload', () => {\r\n    // 当窗口即将被卸载（关闭）时,会触发该事件.\r\n    const string = JSON.stringify(hashMap)\r\n    // 将hashMap对象转换成字符串\r\n    localStorage.setItem('c', string)\r\n    // 将字符串存到本地x中，本地存储只能存字符串\r\n})\r\n// 键盘打开网站,不要了，和搜索冲突\r\n// $(document).on('keypress', (e) => {\r\n//     const { key } = e\r\n//     for (let i = 0; i < hashMap.length; i++) {\r\n//         if (hashMap[i].logo.toUpperCase() === key) {\r\n//             window.open(hashMap[i].url)\r\n//         }\r\n//     }\r\n// })"]}